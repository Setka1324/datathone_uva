/* Font import added */
@import url('https://fonts.googleapis.com/css2?family=Orbitron:wght@400;700&display=swap');

/* Kept original Tailwind imports */
@import "tailwindcss/preflight";
@import "tailwindcss/utilities";
@import "tailwindcss";

/* Kept original keyframes */
@keyframes fade-in {
  from { opacity: 0; }
  to { opacity: 1; }
}
.neon-text { /* Kept original class */
  text-shadow: 0 0 2px #00f3ff, 0 0 4px #00f3ff, 0 0 5px #00f3ff;
}

/* Kept original keyframes */
@keyframes glitch {
  0% { transform: translate(0); }
  20% { transform: translate(-2px, 2px); }
  40% { transform: translate(-2px, -2px); }
  60% { transform: translate(2px, 2px); }
  80% { transform: translate(2px, -2px); }
  100% { transform: translate(0); }
}

/* Kept original classes */
.glitch-text {
  position: relative;
  animation: glitch 1s linear infinite;
}
.glitch-text::before,
.glitch-text::after {
  content: attr(data-text);
  position: absolute;
  top: 0;
  left: 0;
  opacity: 0.8;
}
.glitch-text::before {
  color: #ff00c1;
  z-index: -1;
  animation: glitch 3s infinite;
}
.glitch-text::after {
  color: #00fff9;
  z-index: -2;
  animation: glitch 2s infinite;
}

/* Kept original keyframes */
@keyframes glitch-1 {
  0% { clip-path: inset(20% 0 30% 0); }
  100% { clip-path: inset(10% 0 40% 0); }
}
@keyframes glitch-2 {
  0% { clip-path: inset(40% 0 10% 0); }
  100% { clip-path: inset(30% 0 20% 0); }
}

/* Kept original keyframes */
@keyframes spin {
  to { transform: rotate(360deg); }
}

/* Kept original classes */
.animate-spin {
  animation: spin 1s linear infinite;
}
.animate-fade-in {
  animation: fade-in 0.5s ease-out;
}

/* Kept original variable */
:root {
  --color-midnight: #181434;
}

/* Kept original custom utilities */
.text-midnight {
  color: var(--color-midnight);
}
.bg-midnight {
  background-color: var(--color-midnight);
}

/* Kept original keyframes */
@keyframes scanline { /* First definition kept */
  0% { transform: translateY(-100%); }
  100% { transform: translateY(100%); }
}

/* Kept original class */
.animate-scanline { /* First definition kept */
  animation: scanline 6s linear infinite;
}

/* Kept original class */
.bg-gradient-radial { /* Definition kept */
  background: radial-gradient(circle, var(--tw-gradient-stops));
}

/* Kept original class */
.dashboard-container {
  position: relative;
  z-index: 1;
}

/* Removed duplicate @layer utilities definition */
/*
@layer utilities {
  .bg-gradient-radial {
    background: radial-gradient(circle at center, var(--tw-gradient-stops));
  }
}
*/

/* Removed duplicate @keyframes scanline definition */
/*
@keyframes scanline {
  0% { transform: translateY(-100%); }
  100% { transform: translateY(100%); }
}
*/

/* Kept original keyframes */
@keyframes color-pulse {
  0% { filter: hue-rotate(0deg); }
  100% { filter: hue-rotate(360deg); }
}

/* Removed duplicate .animate-scanline definition */
/*
.animate-scanline {
  animation: scanline 6s linear infinite;
}
*/

/* Kept original class */
.animate-color-pulse {
  animation: color-pulse 10s linear infinite;
}


/* --- Body rule MODIFIED for theme --- */
body {
    /* MODIFIED: Set theme font */
    font-family: 'Orbitron', sans-serif;

    /* MODIFIED: Set theme default text color */
    color: #00FFFF; /* hex for neon-blue */

    /* ADDED: Set theme background color */
    background-color: #1a1a2e; /* hex for dark-bg */

    /* ADDED: Basic layout properties */
    min-height: 100vh;
    display: flex;
    flex-direction: column;

    /* ADDED: Background grid effect */
    background-image:
      linear-gradient(rgba(0, 255, 255, 0.04) 1px, transparent 1px),
      linear-gradient(90deg, rgba(0, 255, 255, 0.04) 1px, transparent 1px);
    background-size: 25px 25px;
}

/* Kept original html, body, #root rules */
html, body {
    overflow: auto;
    height: 100%;
}
#root {
    height: 100%;
    overflow: auto;
}


/* Kept original Leaflet styles */
.leaflet-marker-icon {
  z-index: -1 !important;
}
.leaflet-popup-content {
  fill-opacity: 50%;
}

/* Kept original Header, Nav, Button, Focus styles */
.header {
    display: flex;
    align-items: center;
    justify-content: space-between;
    padding: 16px 24px;
    box-shadow: 0 4px 6px -1px rgba(247, 46, 46, 0.1), 0 2px 4px -1px rgba(245, 28, 28, 0.06);
    z-index: 1;
}
.nav-list {
    list-style: none;
    padding: 0;
    margin: 0;
    display: flex;
    justify-content: flex-start;
    margin-right: 20px;
    margin-top: -25px;
}
.nav-list-item {
    margin-left: 10px;
    font-size: 1.1rem;
    display: inline-block;
}
.nav-list-item-button{
    right: 5vw;
    font-size: 1.1rem;
    position: absolute;
}
.small-button{
    width:auto;
    padding: 10px;
    background-color: aqua;
    color: antiquewhite;
}
.custom-focus:focus {
    outline: 2px solid #00BF9C;
    transition: color 0.3s ease;
}
.input-group:focus-within label {
    color: #00BF9C;
    transition: color 0.3s ease;
}

/* === ADD THESE CUSTOM BUTTON STYLE CLASSES === */

.button-active-pink {
  background-color: #FF00FF; /* neon-pink */
  color: #1a1a2e; /* dark-bg */
  border-color: #FF00FF; /* neon-pink */
  /* Assuming border-width is handled by Button component or base styles */
  /* If shadow utility doesn't work, add: */
  /* box-shadow: 0 0 5px #FF00FF, 0 0 10px #FF00FF, 0 0 15px #FF00FF; */
}

.button-inactive-pink {
  background-color: transparent;
  color: #FF00FF; /* neon-pink */
  border-color: #FF00FF; /* neon-pink */
  border-width: 2px; /* Explicitly set border width */
}

.button-inactive-pink:hover {
  /* neon-pink background with 20% opacity */
  background-color: rgba(255, 0, 255, 0.20);
}

/* ============================================ */